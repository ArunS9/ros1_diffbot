<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="bot_description">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="1.19817892586804E-16 -3.12340575856866E-18 0.0700000000000001"
        rpy="0 0 0" />
      <mass
        value="29.2" />
      <inertia
        ixx="0.121666666666667"
        ixy="-1.86575292252892E-17"
        ixz="4.11563144675498E-18"
        iyy="0.121666666666667"
        iyz="4.34779527195654E-18"
        izz="0.194666666666667" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.647058823529412 0.619607843137255 0.588235294117647 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="right_wheel">
    <inertial>
      <origin
        xyz="0 -1.73472347597681E-18 -1.38777878078145E-17"
        rpy="0 0 0" />
      <mass
        value="0.226194671058465" />
      <inertia
        ixx="0.000211115026321234"
        ixy="-2.37875086020583E-20"
        ixz="-1.35242135145036E-20"
        iyy="0.000211115026321234"
        iyz="-5.70224546556128E-21"
        izz="0.000407150407905237" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/right_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.298039215686275 0.298039215686275 0.298039215686275 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/right_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="rw_joint"
    type="continuous">
    <origin
      xyz="-0.0349999999999999 -0.115 0.0600000000000001"
      rpy="1.5707963267949 0 0" />
    <parent
      link="base_link" />
    <child
      link="right_wheel" />
    <axis
      xyz="0 0 -1" />
  </joint>
  <link
    name="left_wheel">
    <inertial>
      <origin
        xyz="0 1.73472347597681E-18 0"
        rpy="0 0 0" />
      <mass
        value="0.226194671058465" />
      <inertia
        ixx="0.000211115026321234"
        ixy="6.49391926228297E-20"
        ixz="5.39888839903748E-21"
        iyy="0.000211115026321234"
        iyz="-1.86655725846822E-20"
        izz="0.000407150407905237" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/left_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.298039215686275 0.298039215686275 0.298039215686275 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/left_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lw_joint"
    type="continuous">
    <origin
      xyz="-0.0349999999999999 0.115 0.0600000000000002"
      rpy="-1.5707963267949 0 0" />
    <parent
      link="base_link" />
    <child
      link="left_wheel" />
    <axis
      xyz="0 0 1" />
  </joint>
  <link
    name="castor_wheel">
    <inertial>
      <origin
        xyz="6.93889390390723E-18 -0.00749999999999999 0"
        rpy="0 0 0" />
      <mass
        value="0.0167551608191456" />
      <inertia
        ixx="1.73834793498635E-06"
        ixy="-8.43693195732823E-23"
        ixz="0"
        iyy="2.68082573106329E-06"
        iyz="1.0448592516744E-22"
        izz="1.73834793498635E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/castor_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.298039215686275 0.298039215686275 0.298039215686275 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/castor_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="cw_joint"
    type="continuous">
    <origin
      xyz="0.0610000000000001 0 0.0200000000000001"
      rpy="1.5707963267949 0 0.582927366893715" />
    <parent
      link="base_link" />
    <child
      link="castor_wheel" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="camera">
    <inertial>
      <origin
        xyz="0.00499999999999999 -3.00889029223167E-17 1.04083408558608E-17"
        rpy="0 0 0" />
      <mass
        value="0.00535" />
      <inertia
        ixx="4.56979166666667E-07"
        ixy="-2.75701018240856E-23"
        ixz="-9.35585554615385E-25"
        iyy="2.22916666666667E-07"
        iyz="-1.00514918541612E-22"
        izz="3.23229166666667E-07" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/camera.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 0.35" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/camera.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="camera_joint"
    type="fixed">
    <origin
      xyz="0.1 0 0.0927463026376843"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="camera" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="lidar_1">
    <inertial>
      <origin
        xyz="6.93889390390723E-18 -8.25320971468288E-18 -0.015"
        rpy="0 0 0" />
      <mass
        value="0.0907606117622091" />
      <inertia
        ixx="2.72281835286627E-05"
        ixy="-2.0578185688788E-23"
        ixz="-7.80090837203218E-22"
        iyy="2.72281835286627E-05"
        iyz="5.06436145085976E-22"
        izz="4.08422752929941E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/lidar_1.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 0.35" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot_description/meshes/lidar_1.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lidar"
    type="fixed">
    <origin
      xyz="0.0610000000000001 0 0.15"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="lidar_1" />
    <axis
      xyz="0 0 0" />
  </joint>
  
 <gazebo>
 <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>100</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>lw_joint</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>rw_joint</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.25</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.12</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>
  <!-- hokuyo -->
  <gazebo reference="lidar_1">
      <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar_1</frameName>
      </plugin>
    </sensor>
  </gazebo>
  
 <!-- camera -->
  <gazebo reference="camera">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo> 
</robot>
